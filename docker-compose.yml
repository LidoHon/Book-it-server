services:
  postgres:
    build: .
    image: postgres:15
    container_name: postgres_container
    restart: always
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5434:5432"

  graphql-engine:
    image: hasura/graphql-engine:v2.42.0
    container_name: hasura_graphql_engine
    restart: always
    depends_on:
      - postgres
    environment:
      HASURA_GRAPHQL_DATABASE_URL: ${HASURA_GRAPHQL_DATABASE_URL}
      HASURA_GRAPHQL_ENABLE_CONSOLE: "true"
      HASURA_GRAPHQL_ADMIN_SECRET: ${HASURA_GRAPHQL_ADMIN_SECRET}
      HASURA_GRAPHQL_ENABLE_TELEMETRY: "false"
      HASURA_GRAPHQL_CORS_DOMAIN: "*"
      HASURA_GRAPHQL_UNAUTHORIZED_ROLE: anonimous
      HASURA_GRAPHQL_SERVER_PORT: ${HASURA_GRAPHQL_PORT}
      HASURA_GRAPHQL_DEV_MODE: "true"
      HASURA_ACTION_BASE_URL: ${HASURA_ACTION_BASE_URL}
      HASURA_GRAPHQL_JWT_SECRET: '{"type":"HASURA_ACTION_BASE_URL","key":"9a49d0bc4563b42c7dbc57a56c25535acaaf62933f9da5e35122024717843317"}'
      HASURA_GRAPHQL_ENABLE_CONSOLE_AUTH: "true"
      # HASURA_GRAPHQL_ENABLE_APOLLO_FEDERATION: "true"
    ports:
      - "8080:8080"
    command:
      - graphql-engine
      - serve
  # go-app:
  #   build:
  #     context: ./go-app # Path to your Go app folder
  #     dockerfile: Dockerfile
  #   container_name: go_app_container
  #   restart: always
  #   depends_on:
  #     - postgres
  #   environment:
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_USER: ${POSTGRES_USER}
  #     DB_PASSWORD: ${POSTGRES_PASSWORD}
  #     DB_NAME: ${POSTGRES_DB}
  #     JWT_SECRET_KEY: ${HASURA_GRAPHQL_ADMIN_SECRET}
  #     PORT: 8000
  #   ports:
  #     - "8000:8000"
  #   volumes:
  #     - ./go-app:/app  # Mount local Go app folder for live reloading
  #     - /app/tmp       # Temporary folder for Air hot reloading
  #   command: ["air"] # Use Air for live reloading during development

volumes:
  postgres_data:
