type Mutation {
  addBook(
    title: String!
    author: String!
    available: Boolean!
    genre: String!
    image: ImageInfo
  ): CreatedBooksOutput
}

type Mutation {
  addWishlist(
    userId: Int!
    bookId: Int!
  ): CreateWishlistRequest
}

type Mutation {
  editUploadedImages(
    movie_id: Int!
    images: [ImageInfo!]!
  ): [UploadResponce!]!
}

type Query {
  login(
    email: String!
    password: String!
  ): LoginResponce
}

type Mutation {
  passwordResetRequest(
    email: String!
  ): ResetRequestOutput!
}

type Mutation {
  passwordUpdate(
    token: String!
    userId: Int!
    password: String!
  ): ResetedPasswordOutput!
}

type Mutation {
  rentbook(
    user_id: Int!
    book_id: Int!
  ): CreatedRentBook
}

type Mutation {
  signup(
    userName: String!
    email: String!
    phone: String!
    password: String!
    image: ImageInfo
  ): SignedUpUserOutput!
}

type Mutation {
  updateBook(
    title: String!
    author: String!
    genre: String!
    book_id: Int!
    bookImage: ImageInfo
  ): UpdatedBookOutput!
}

type Mutation {
  updateProfile(
    userName: String!
    phone: String!
    userId: Int!
    image: ImageInfo
  ): UpdateResponce!
}

type Mutation {
  verifyEmail(
    verification_token: String!
    user_id: Int!
  ): ResetedPasswordOutput!
}

input ImageInfo {
  name: String
  type: String
  base64String: String
}

type LoginResponce {
  user: User
}

type SignedUpUserOutput {
  id: Int!
  userName: String!
  email: String!
  token: String!
  role: String!
  refreshToken: String!
}

type UploadResponce {
  url: String!
}

type RegisteredMovieOutput {
  id: Int!
  title: String!
  description: String!
  duration: String!
  genre_id: Int!
  director_id: Int!
}

type User {
  id: Int!
  name: String!
  email: String!
  token: String!
  role: String!
  refreshToken: String!
}

type ReservedTicketOutput {
  id: Int!
  payment_url: String!
}

type ResetRequestOutput {
  id: Int!
  message: String!
}

type ResetedPasswordOutput {
  message: String!
}

type UpdateResponce {
  message: String!
}

type Book {
  id: Int!
  title: String!
  author: String!
  available: Boolean!
  genre: String!
  bookImage: String
}

type CreatedBooksOutput {
  id: Int!
  title: String!
  author: String!
  avaliable: Boolean!
  genre: String!
  bookImage: String
}

type WishListOutput {
  id: Int!
  user: User!
  book: Book!
}

type UpdatedBookOutput {
  message: String!
}

type CreatedRentBook {
  message: String!
  user_id: Int!
  book_id: Int!
  rent_day: String!
}

type CreateWishlistRequest {
  message: String!
}

